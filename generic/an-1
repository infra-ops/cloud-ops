ssh username@your.remote.host.for.ssh.com 'bash -s' < server-script.sh

sshpass -p iis123 ssh -o StrictHostKeyChecking=no root@192.168.122.113 'cd /etc/ansible;ansible-playbook ap.yml'

http://ridz1ba.blogspot.in/2014/12/installing-oracle-java-jdk8-on-ubuntu.html

[web]
172.16.89.129 ansible_ssh_user=xxxxx ansible_ssh_pass=xxxxx ansible_sudo_pass=xxxx

ansible -m ping all


ansible -m shell -a 'free -m' host1
ansible all -s -m shell -a 'apt-get install nginx'

ansible all -s -m apt -a 'pkg=nginx state=installed update_cache=true'

cat hello.yml

---
- hosts: web
sudo: true
tasks:
- name: run echo command
command: /bin/echo hello matrix
sudo: true
when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

cat nginx-v.1.0.1.yml 
---

- hosts: web
  tasks:
    - name: Installs nginx web server
      apt: pkg=nginx state=installed update_cache=true
      notify:
        - start nginx

  handlers:
    - name: start nginx
      service: name=nginx state=started

  remote_user: deploy
  become: true
  become_method: sudo

ansible-playbook nginx-v.1.0.1.yml --extra-vars "variable_host=192.168.10.27"
ansible-playbook nginx-v.1.0.1.yml -i /etc/ansible/infra --extra-vars "host=web"




ansible-playbook playbook.yml -i hosts/production --tags="ntp"

ansible-playbook --syntax-check nginx.yml

ansible-role roles/nginx/


ansible-playbook nginx-v.1.0.1.yml -i /etc/ansible/inventory --extra-vars "nodes=web user=deploy"
deploy ALL=(ALL) NOPASSWD: ALL
usermod --shell /bin/bash deploy



cat /etc/hosts
52.xx.xx.xx  bastion.example.com


cat .ssh/config 
Host 172.16.*.*
 ProxyCommand ssh -W %h:%p 52.xx.xx.xx
 User deploy
 IdentityFile ~/test-key.pem

Host 52.xx.xx.xx
 Hostname bastion.example.com
 User deploy
 IdentityFile ~/.ssh/id_rsa
 ControlMaster auto
 ControlPath ~/.ssh/ansible-%r@%h:%p
 ControlPersist 5m

  
  


cat aws_inventory-root.yml 
---
[bastion]
jump123 ansible_ssh_host=52.xx.xx.xx ansible_ssh_user=xxxx

[web]
web123  ansible_ssh_host=172.xx.xx.xx   ansible_ssh_user=xxxx












/ec2.py --list --profile default --refresh-cache

docker pull postgres:9.6
docker pull ansible/awx_rabbitmq:3.7.4
docker pull memcached:alpine
docker pull ansible/awx_web:latest
docker pull ansible/awx_task:latest

ansible-playbook -i inventory -e docker_registry_password=password install.yml


ansible-playbook -i inventory/mycluster/hosts.ini cluster.yml

export PATH=~/bin:$PATH 

 git config --global user.name "xxxx"
 git config --global user.email "xxxxxx@gmail.com"
 
 git pull --rebase origin master

git rm -r --cached elk2
git commit -m "changes"
git push origin master

---
# Update Jenkins so that plugin updates don't fail.
- name: Create update directory
  file:
    path: "{{ jenkins_home }}/updates"
    state: directory
    owner: jenkins
    group: jenkins
- name: Download current plugin updates from Jenkins update site
  get_url:
    url: http://updates.jenkins-ci.org/update-center.json
    dest: "{{ jenkins_home }}/updates/default.json"
    owner: jenkins
    group: jenkins
    mode: 0440
- name: Remove first and last line from json file
  replace:
    path: "{{ jenkins_home }}/updates/default.json"
    regexp: "1d;$d"
#- name: Install Jenkins plugins using password.
#  jenkins_plugin:
#    name: "{{ item }}"
#    jenkins_home: "{{ jenkins_home }}"
#    url_username: "{{ jenkins_admin_username }}"
#    url_password: "{{ jenkins_admin_password }}"
#    state: "{{ jenkins_plugins_state }}"
#    timeout: "{{ jenkins_plugin_timeout }}"
#    updates_expiration: "{{ jenkins_plugin_updates_expiration }}"
#    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}"
#    with_dependencies: "{{ jenkins_plugins_install_dependencies }}"
#  with_items: "{{ jenkins_plugins }}"
#  when: jenkins_admin_password != ""
#  notify: Restart Jenkins



#- name: Install plugin
#  jenkins_plugin:
#    name: "{{ item }}"
#    url_username: admin
#    url_password: admin
#    url: http://192.168.10.116:8080
#  with_items: "{{ plugins }}"

#- git: repo=https://github.com/jenkinsci/blueocean-plugin.git
#       dest=/opt/apps/blue
#       clone=yes

#- name: build blueocean module
#  shell: cd /opt/apps/blue; /opt/apps/maven/bin/mvn clean install
#
#- name: execute blueocean module
#  shell: cd /opt/apps/blue; /opt/apps/maven/bin/mvn -f blueocean/pom.xml hpi:run

- name: copy blueocean plugins list
  copy:
    src: /etc/ansible/files/p3.yml
    dest: /opt/apps/plugs/p4.yml
    mode: 777


- name: copy blueocean install script
  copy:
    src: /etc/ansible/files/jenkinscool.py
    dest: /opt/apps/plugs/jenkinscool.py
    mode: 777


#- name: execute blueocean install script
#  shell: python /opt/apps/plugs/jenkinscool.py -i /opt/apps/plugs/p4.yml

#- name: copy blue plugins
#  shell: cp /root/*.hpi  /var/lib/jenkins/plugins/

#- name: copy blues to jenkins directory
#  src: /opt/apps/jenkins/plugins/* dest=/var/lib/jenkins/plugins


- copy:
    src: "{{ item }}"
    dest: /var/lib/jenkins/plugins/
    owner: root
    #mode: 600
  with_fileglob:
    - /opt/apps/jenkins/plugins/*

#- name: remove blue plugins
#  shell: rm -rf /root/*.hpi




- name: Restart Jenkins if required
  service:
     name: jenkins
     state: restarted



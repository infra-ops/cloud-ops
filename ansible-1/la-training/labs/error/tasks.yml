[Instructions]

You are to set up an automation to pull down a data file from a notoriously unreliable third-party system for integration purposes. 
Create a playbook that attempts to pull down http://apps.l33t.com/transaction_list to the localhost. 
The playbook should gracefully handle the site being down by outputting the message "l33t.com appears to be down. Try again later." to stdout. 
If the task succeeds, the playbook should write "File downloaded." to stdout. 
No matter if the playbook errors or not, it should always output "Attempt completed." to stdout.
If the report is collected, your playbook should write and edit the file to replace all occurrences of #BLANKLINE with a line break \n.

[Summary tasks list:]

1. Create a playbook called /home/ansible/report.yml.
2. Configure the playbook to download http://apps.l33t.com/transaction_list to /home/ansible/transaction_list on the localhost and output "File downloaded." to stdout.
3. Configure the playbook to handle connection failure by outputting "l33t.com appears to be down. Try again later." to stdout.
4. Configure the playbook to output "Attempt Completed" to stdout no matter if it was successful or not.
5. Configure the playbook to replace all instances of #BLANKLINE with the line break character \n.
6. Run your playbook using the default inventory to verify your work.


[Important notes:]

For your convenience, Ansible has been installed on the control node.
The user ansible has been already created on all servers with appropriate shared keys for access to the necessary servers from the control node.
The ansible user has the same password as cloud_user.
All necessary Ansible inventories have been created for you.
apps.l337.com is unavailable by default.
You may force a state change by running /home/ansible/scripts/change_l33t.sh.


[Objectives]
1. Create a playbook called */home/ansible/report.yml*.
2. Configure the playbook to download *http://apps.l33t.com/transaction_list* to */home/ansible/transaction_list* on the localhost and output "File downloaded." to *stdout*.
3. Configure the playbook to handle connection failure by outputting "l33t.com appears to be down. Try again later." to stdout.
4. Configure the playbook to output "Attempt Completed" to *stdout* no matter if it was successful or not.
5. Configure the playbook to replace all instances of #BLANKLINE with the line break character `\n`.
6. Run your playbook using the default inventory to verify your work



#****************************************************************************************
# Yaml formate to manage entire lifcycle of containers
# We define four stages as of now viz:
# 1. Tak registration 
# 2. Service creation 
# 3. Service updates
# 4. Service deletion
# Assumption: 
#      - Images are available in ECR repo or docker-hub
#      - Cluster is up and running with container instances
# More information : http://boto3.readthedocs.io/en/latest/reference/services/ecs.html
# *****************************************************************************************
containers:
    appname: boto-test
    taskRoleArn: ''
    region: us-east-1
    containerDefinitions: 
     - 
       logConfiguration: 
       logDriver: awslogs
       options: 
        "awslogs-group": "/ecs/tomcat-container-logs"
        "awslogs-region": "us-east-1"
        "awslogs-stream-prefix": ecs
      portMappings: 
       - 
       hostPort: 8080
        protocol: tcp
        containerPort: 8080
      cpu: 1024
      memory: 256
      image: tomcat
      essential: true
      name: "tomcat-webserver"
    requiresCompatibilities: 
     - 
       FARGATE
    memory: 2048
    family: "tomcat-webserver"
    networkMode: awsvpc
    cpu: 1024
    
    #volumes:
    #  - name: logs
    #    host:
    #      sourcePath: /var/log/apps/
    # ***********************************************************************************************************
    # Service parameters will be used to create service
    # We can add load balancers alo if required.
    # Please visit : http://boto3.readthedocs.io/en/latest/reference/services/ecs.html#ECS.Client.create_service
    # ***********************************************************************************************************
    serviceCreate:
      - cluster: stage-db-stack
        serviceName: couch-service
        # Task definition is family:revision. 
        # Creat service on latest revision and use update to roll back o deploy new version
        taskDefinition: couch
        desiredCount: 2
        clientToken: couch-service
        deploymentConfiguration:
           maximumPercent: 200
           minimumHealthyPercent: 50
    # ******************************************************************
    # Service Update parameters will be used to update running service 
    # ******************************************************************
    serviceUpdate:
      - cluster: stage-db-stack
        serviceName: couch-service
        # Desired count also can be updated via commandlinee
        desiredCount: 2
        # Specify task def revision to roll back 
        taskDefinition: couch
        deploymentConfiguration:
           maximumPercent: 200
           minimumHealthyPercent: 50
    # **********************************************************************
    # Service dlete will be used to delete services where running count is 0 
    # Cannot be used via automated tools as it requires user confimration
    # **********************************************************************
    serviceDelete:
      - cluster: stage-db-stack
        serviceName: couch-service

